<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:WPFPricingCard.Styles">

    <!-- Start: Border Style -->
    <Style x:Key="CardBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="CornerRadius" Value="20"/>
        <Setter Property="Height" Value="480"/>
        <Setter Property="Width" Value="290"/>
        <Setter Property="Padding" Value="30 40"/>
    </Style>
    <!-- End: Border Style -->

    <!-- Start: Pro Styles  -->
    <!-- Start: TitleLabelStyle  -->
    <Style x:Key="TitleLabelStyle" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="{DynamicResource ProTextColor}"/>
        <Setter Property="FontWeight" Value="700"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Grid>
                        <ContentPresenter x:Name="Content"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- End: TitleLabelStyle  -->

    <!-- Start: PriceLabelStyle  -->
    <Style x:Key="PriceLabelStyle" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="{DynamicResource ProTextColor}"/>
        <Setter Property="FontWeight" Value="700"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Padding" Value="5 0"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Grid>
                        <ContentPresenter x:Name="Content"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- End: PriceLabelStyle  -->

    <!-- Start: SubTitleLabelStyle  -->
    <Style x:Key="SubTitleLabelStyle" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="{DynamicResource ProTextColor}"/>
        <Setter Property="FontWeight" Value="500"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Padding" Value="2 3 0 0"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Grid>
                        <ContentPresenter x:Name="Content"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- End: SubTitleLabelStyle  -->

    <!-- Start: IconLabelStyle  -->
    <Style x:Key="IconLabelStyle" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="{DynamicResource ProTextColor}"/>
        <Setter Property="FontWeight" Value="400"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="20"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <!-- Icon -->
                        <Path Data="{DynamicResource Check}"
                              Height="16" Width="16"
                              Stretch="Uniform"
                              Fill="{DynamicResource ProTextColor}"/>
                        
                        <!-- Text Content -->
                        <ContentPresenter x:Name="Content"
                                          Grid.Column="1"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="True">
                            <Setter TargetName="Content" Property="Margin" Value="10 0 0 0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- End: IconLabelStyle  -->

    
    <!-- Start: ProButtonStyle -->
    <Style x:Key="ProButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource ProButtonColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource ButtonTextColor}"/>
        <Setter Property="FontWeight" Value="500"/>
        <Setter Property="Padding" Value="12 6"/>
        <Setter Property="BorderThickness" Value="0"/>
        <!--<Setter Property="MaxHeight" Value="40"/>
            <Setter Property="MinHeight" Value="40"/>-->
        <Setter Property="Width" Value="180"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="btnBorder" CornerRadius="20"
                                Background="{TemplateBinding Background}"
                                Width="{TemplateBinding Width}"
                                
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True"
                                Padding="{TemplateBinding Padding}">
                        <ContentPresenter x:Name="ContentPresenter" Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              RecognizesAccessKey="True"/>
                        <!--<Border.Effect>
                                <DropShadowEffect ShadowDepth=".5" Direction="0"
                                                  Opacity=".3"/>
                            </Border.Effect>-->
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Height" Value="41"/>
                            <Setter Property="Width" Value="182"/>
                            <Setter TargetName="btnBorder" Property="CornerRadius" Value="21"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Height" Value="40"/>
                            <Setter Property="Width" Value="180"/>
                            <!--<Setter TargetName="btnBorder" Property="CornerRadius" Value="20"/>-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- End: ProButtonStyle -->
    <!-- End: Pro Styles  -->
    

    <!-- Start: Free And Team Styles  -->
    <!-- Start: FreeTeamTitlesLabelStyle  -->
    <Style x:Key="FreeTeamTitlesLabelStyle" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
        <Setter Property="FontWeight" Value="700"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Grid>
                        <ContentPresenter x:Name="Content"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- End: FreeTeamTitlesLabelStyle  -->

    <!-- Start: FreeTeamPricingLabelStyle -->
    <Style x:Key="FreeTeamPricingLabelStyle" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
        <Setter Property="FontWeight" Value="700"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Padding" Value="5 0"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Grid>
                        <ContentPresenter x:Name="Content"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- End: PriceFreeTeamLabelStyle -->

    <!-- Start: FreeTeamSubTitlesLabelStyle -->
    <Style x:Key="FreeTeamSubTitlesLabelStyle" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
        <Setter Property="FontWeight" Value="500"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Padding" Value="2 3 0 0"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Grid>
                        <ContentPresenter x:Name="Content"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- End: FreeTeamSubTitlesLabelStyle -->

    <!-- Start: FreeTeamIconLabelsStyle -->
    <Style x:Key="FreeTeamIconLabelsStyle" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
        <Setter Property="FontWeight" Value="400"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="20"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <!-- Icon -->
                        <Path Data="{DynamicResource Check}"
                              Height="16" Width="16"
                              Stretch="Uniform"
                              Fill="{DynamicResource PrimaryTextColor}"/>

                        <!-- Text Content -->
                        <ContentPresenter x:Name="Content"
                                          Grid.Column="1"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="True">
                            <Setter TargetName="Content" Property="Margin" Value="10 0 0 0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- End: FreeTeamIconLabelsStyle -->

    <!-- Start: PrimaryButtonStyle -->
    <Style x:Key="PrimaryButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource PrimaryBlueColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource ProTextColor}"/>
        <Setter Property="FontWeight" Value="500"/>
        <Setter Property="Padding" Value="12 6"/>
        <Setter Property="BorderThickness" Value="0"/>
        <!--<Setter Property="MaxHeight" Value="40"/>
            <Setter Property="MinHeight" Value="40"/>-->
        <Setter Property="Width" Value="180"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="btnBorder" CornerRadius="20"
                                Background="{TemplateBinding Background}"
                                Width="{TemplateBinding Width}"
                                
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True"
                                Padding="{TemplateBinding Padding}">
                        <ContentPresenter x:Name="ContentPresenter" Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              RecognizesAccessKey="True"/>
                        <!--<Border.Effect>
                                <DropShadowEffect ShadowDepth=".5" Direction="0"
                                                  Opacity=".3"/>
                            </Border.Effect>-->
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Height" Value="41"/>
                            <Setter Property="Width" Value="182"/>
                            <Setter TargetName="btnBorder" Property="CornerRadius" Value="21"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Height" Value="40"/>
                            <Setter Property="Width" Value="180"/>
                            <!--<Setter TargetName="btnBorder" Property="CornerRadius" Value="20"/>-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- End: PrimaryButtonStyle -->
    <!-- Start: Free And Team Styles  -->

    <!-- Start: ToggleButtonStyle -->
    <Style x:Key="ToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{DynamicResource SecundaryGrayColor}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryGrayColor}"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Width" Value="35"/>
        <Setter Property="MaxHeight" Value="20"/>
        <Setter Property="MaxWidth" Value="35"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                CornerRadius="7"
                                Height="14"
                                Width="35"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center">
                            <!-- Optional -->
                            <!--<Border.Effect>
                                <DropShadowEffect ShadowDepth="0.5" Opacity=".2"/>
                            </Border.Effect>-->
                        </Border>
                        <Ellipse x:Name="Ellipse"
                                     Height="20"
                                     Width="20"
                                     VerticalAlignment="Center"
                                     HorizontalAlignment="Left"
                                     Fill="{DynamicResource ProTextColor}"
                                     Stroke="{TemplateBinding BorderBrush}"
                                     StrokeThickness="3">
                            <!-- Optional -->
                            <!--<Ellipse.Effect>
                                <DropShadowEffect ShadowDepth="0.5" Opacity=".2"/>
                            </Ellipse.Effect>-->
                        </Ellipse>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- EventTrigger Checked -->
                        <EventTrigger RoutedEvent="Checked">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="Border"
                                                        Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                        To="#C2D1FC" Duration="0:0:0.2"/>
                                    <ThicknessAnimation Storyboard.TargetName="Ellipse"
                                                            Storyboard.TargetProperty="Margin"
                                                            To="15 0 0 0" Duration="0:0:0.2"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <!-- EventTrigger UnChecked -->
                        <EventTrigger RoutedEvent="Unchecked">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="Border"
                                                        Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                        To="#CECECE" Duration="0:0:0.2"/>
                                    <ThicknessAnimation Storyboard.TargetName="Ellipse"
                                                            Storyboard.TargetProperty="Margin"
                                                            To="0 0 0 0" Duration="0:0:0.2"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Ellipse"
                                    Property="Fill"
                                    Value="{DynamicResource SecundaryBlueColor}"/>
                            <Setter TargetName="Ellipse"
                                   Property="Stroke"
                                   Value="{DynamicResource BorderBrushColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- End: ToggleButtonStyle -->

</ResourceDictionary>